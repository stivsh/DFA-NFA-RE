#############################################################################
# Makefile for building: untitled
# Generated by qmake (2.01a) (Qt 4.8.2) on: ?? ???. 6 05:24:27 2014
# Project:  untitled.pro
# Template: app
# Command: /usr/bin/qmake-qt4 -spec /usr/share/qt4/mkspecs/linux-g++ CONFIG+=debug CONFIG+=declarative_debug -o Makefile untitled.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_WEBKIT -DUNIX -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4 -I.
LINK          = g++
LFLAGS        = 
LIBS          = $(SUBLIBS)  -L/usr/lib/x86_64-linux-gnu -lboost_regex /home/stiv/ttt/untitled/gen_find_lib/libfind_lib.a -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake-qt4
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		automata.cpp \
		poolalloc.cpp \
		transmissioncollection.cpp \
		incomingtransmitions.cpp \
		automata_minimize.cpp \
		automata_to_dfa.cpp \
		automata_to_c_code.cpp \
		automata_operations.cpp \
		automata_find.cpp \
		reparser.cpp \
		automata_serialization.cpp 
OBJECTS       = main.o \
		automata.o \
		poolalloc.o \
		transmissioncollection.o \
		incomingtransmitions.o \
		automata_minimize.o \
		automata_to_dfa.o \
		automata_to_c_code.o \
		automata_operations.o \
		automata_find.o \
		reparser.o \
		automata_serialization.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/declarative_debug.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		untitled.pro
QMAKE_TARGET  = untitled
DESTDIR       = 
TARGET        = untitled

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)
	{ test -n "$(DESTDIR)" && DESTDIR="$(DESTDIR)" || DESTDIR=.; } && test $$(gdb --version | sed -e 's,[^0-9]\+\([0-9]\)\.\([0-9]\).*,\1\2,;q') -gt 72 && gdb --nx --batch --quiet -ex 'set confirm off' -ex "save gdb-index $$DESTDIR" -ex quit '$(TARGET)' && test -f $(TARGET).gdb-index && objcopy --add-section '.gdb_index=$(TARGET).gdb-index' --set-section-flags '.gdb_index=readonly' '$(TARGET)' '$(TARGET)' && rm -f $(TARGET).gdb-index || true

Makefile: untitled.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/declarative_debug.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/x86_64-linux-gnu/libQtCore.prl
	$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++ CONFIG+=debug CONFIG+=declarative_debug -o Makefile untitled.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/debug.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/declarative_debug.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/x86_64-linux-gnu/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++ CONFIG+=debug CONFIG+=declarative_debug -o Makefile untitled.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/untitled1.0.0 || $(MKDIR) .tmp/untitled1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/untitled1.0.0/ && $(COPY_FILE) --parents transition.h state.h automata.h common.h poolalloc.h transmissioncollection.h incomingtransmitions.h find_lib.h automata_types.h reparser.h .tmp/untitled1.0.0/ && $(COPY_FILE) --parents main.cpp automata.cpp poolalloc.cpp transmissioncollection.cpp incomingtransmitions.cpp automata_minimize.cpp automata_to_dfa.cpp automata_to_c_code.cpp automata_operations.cpp automata_find.cpp reparser.cpp automata_serialization.cpp .tmp/untitled1.0.0/ && (cd `dirname .tmp/untitled1.0.0` && $(TAR) untitled1.0.0.tar untitled1.0.0 && $(COMPRESS) untitled1.0.0.tar) && $(MOVE) `dirname .tmp/untitled1.0.0`/untitled1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/untitled1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all:
compiler_moc_header_clean:
compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 

####### Compile

main.o: main.cpp automata.h \
		state.h \
		transmissioncollection.h \
		transition.h \
		incomingtransmitions.h \
		poolalloc.h \
		automata_types.h \
		common.h \
		find_lib.h \
		reparser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

automata.o: automata.cpp automata.h \
		state.h \
		transmissioncollection.h \
		transition.h \
		incomingtransmitions.h \
		poolalloc.h \
		automata_types.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o automata.o automata.cpp

poolalloc.o: poolalloc.cpp poolalloc.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o poolalloc.o poolalloc.cpp

transmissioncollection.o: transmissioncollection.cpp transmissioncollection.h \
		transition.h \
		state.h \
		incomingtransmitions.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o transmissioncollection.o transmissioncollection.cpp

incomingtransmitions.o: incomingtransmitions.cpp incomingtransmitions.h \
		state.h \
		transmissioncollection.h \
		transition.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o incomingtransmitions.o incomingtransmitions.cpp

automata_minimize.o: automata_minimize.cpp automata.h \
		state.h \
		transmissioncollection.h \
		transition.h \
		incomingtransmitions.h \
		poolalloc.h \
		automata_types.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o automata_minimize.o automata_minimize.cpp

automata_to_dfa.o: automata_to_dfa.cpp automata.h \
		state.h \
		transmissioncollection.h \
		transition.h \
		incomingtransmitions.h \
		poolalloc.h \
		automata_types.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o automata_to_dfa.o automata_to_dfa.cpp

automata_to_c_code.o: automata_to_c_code.cpp automata.h \
		state.h \
		transmissioncollection.h \
		transition.h \
		incomingtransmitions.h \
		poolalloc.h \
		automata_types.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o automata_to_c_code.o automata_to_c_code.cpp

automata_operations.o: automata_operations.cpp automata.h \
		state.h \
		transmissioncollection.h \
		transition.h \
		incomingtransmitions.h \
		poolalloc.h \
		automata_types.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o automata_operations.o automata_operations.cpp

automata_find.o: automata_find.cpp automata.h \
		state.h \
		transmissioncollection.h \
		transition.h \
		incomingtransmitions.h \
		poolalloc.h \
		automata_types.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o automata_find.o automata_find.cpp

reparser.o: reparser.cpp reparser.h \
		automata.h \
		state.h \
		transmissioncollection.h \
		transition.h \
		incomingtransmitions.h \
		poolalloc.h \
		automata_types.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o reparser.o reparser.cpp

automata_serialization.o: automata_serialization.cpp automata.h \
		state.h \
		transmissioncollection.h \
		transition.h \
		incomingtransmitions.h \
		poolalloc.h \
		automata_types.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o automata_serialization.o automata_serialization.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

